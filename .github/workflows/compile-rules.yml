name: Compile MRS Rule Sets

on:
  push:
    branches:
      - main
    paths:
      - 'rules/**/*.txt'
      - 'rules/**/*.yaml'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Mihomo Core
        run: |
          wget -O mihomo.gz "https://github.com/MetaCubeX/mihomo/releases/download/v1.18.1/mihomo-linux-amd64-v1.18.1.gz"
          gunzip mihomo.gz
          chmod +x mihomo

      - name: Create a minimal dummy config file
        run: |
          cat > dummy-config.yaml <<'EOF'
          mixed-port: 7890
          allow-lan: false
          mode: rule
          log-level: info
          EOF
          echo "dummy-config.yaml content:"
          cat dummy-config.yaml

      - name: Show mihomo info / help (diagnostic)
        run: |
          ./mihomo --version || true
          ./mihomo convert-ruleset --help || ./mihomo --help || true

      - name: Convert .txt and .yaml files to .mrs (with timeout + diagnostics)
        run: |
          set -euo pipefail
          shopt -s globstar nullglob

          # collect files
          files=(rules/**/*.{txt,yaml})
          if [ ${#files[@]} -eq 0 ]; then
            echo "No rule files found under rules/ â€” nothing to do."
            exit 0
          fi

          # Do a quick single-file dry-run on the first file to detect hangs/errors early
          first="${files[0]}"
          echo "Dry-run converting single file (timeout 60s) : $first"
          mkdir -p /tmp/mihomo_test_out
          if ! timeout 60s ./mihomo convert-ruleset "$(basename "$first")" "$(echo "$first" | awk -F. '{print $NF}')" "$first" "/tmp/mihomo_test_out/$(basename "$first").mrs" -c dummy-config.yaml; then
            echo "Dry-run failed or timed out. Printing sample logs and aborting before bulk run."
            ps aux | grep mihomo || true
            ls -la /tmp || true
            exit 1
          fi
          echo "Dry-run succeeded, proceeding to bulk conversion..."

          for file in "${files[@]}"; do
            if [[ "$file" == *"-ipcidr"* ]]; then
              TYPE="ipcidr"
            else
              TYPE="domain"
            fi

            ext="${file##*.}"
            if [[ "$ext" == "yaml" ]]; then
              FORMAT="yaml"
            else
              FORMAT="text"
            fi

            relative_path="${file#rules/}"
            parent_dir=$(dirname "$relative_path")
            target_dir="compiled_rules/$parent_dir"
            filename=$(basename "$relative_path")
            filename_no_ext="${filename%.*}"
            output_file="$target_dir/$filename_no_ext.mrs"

            mkdir -p "$target_dir"
            echo "Converting '$file' -> '$output_file' (type=$TYPE format=$FORMAT)"

            # timeout prevents long-running server mode from hanging the job
            if ! timeout 120s ./mihomo convert-ruleset "$TYPE" "$FORMAT" "$file" "$output_file" -c dummy-config.yaml; then
              echo "Conversion failed or timed out for: $file"
              exit 1
            fi
          done

      - name: Commit and push compiled files
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: Auto-compile MRS rule sets"
          file_pattern: 'compiled_rules/**'
